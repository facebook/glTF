{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "KHR_audio_graph Audio Source Properties",
    "type": "object",
    "description": "Audio sources reference audio data and define playback properties for it. An audio source node has no inputs and exactly one output, which has the same number of channels as indicated in encoding properties.",
    "allOf": [
        {
            "$ref": "glTFProperty.schema.json"
        }
    ],
    "properties": {
        "data": {
            "description": "Audio content for this source: either reference to audioData[] or an inline oscillator.",
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "audioData": { "allOf": [ { "$ref": "glTFid.schema.json" } ] }
                    },
                    "required": ["audioData"],
                    "additionalProperties": false
                },
                {
                    "type": "object",
                    "properties": {
                        "oscillator": { "$ref": "KHR_audio_graph.oscillator.schema.json" }
                    },
                    "required": ["oscillator"],
                    "additionalProperties": false
                }
            ]
        },
        "priority": {
            "description": "Determines the priority of this audio source among all the ones that coexist in the scene (0 = most important, 256 = least important, default = 128).",
            "type": "integer",
            "minimum": 0,
            "maximum": 256,
            "default": 128
        },
        "gain": {
            "description": "Gain value applied to the audio (linear [0..1]).",
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0,
            "default": 1.0
        },
        "state": {
            "description": "Playback state.",
            "type": "string",
            "enum": ["stopped", "playing", "paused"],
            "default": "stopped"
        },
        "autoPlay": {
            "description": "Whether or not to play the specified audio when the glTF is loaded.",
            "type": "boolean",
            "default": false
        },
        "loop": {
            "description": "Playback in a loop (false = no-loop, true = loop). If set to true, then once playback reaches the time specified by “loop end position” (or the end of the asset, whichever is first), the source node will continue playback again from a position specified by the “loop start position” property.",
            "type": "boolean",
            "default": false
        },
        "loopStart": {
            "description": "The starting position in ms when looping.",
            "type": "number",
            "default": 0.0
        },
        "loopEnd": {
            "description": "The ending position (ms) of the loop.",
            "type": "number",
            "default": 0.0
        },
        "playbackSpeed": {
            "description": "Rate of playback. A value of 1.0 would playback the audio at the standard rate. A value of 2.0 would play back the asset at double the speed.",
            "type": "number",
            "default": 1.0
        },
        "duration": {
            "description": "Length of the underlying audio data in ms.",
            "type": "number",
            "minimum": 0.0,
            "default": 0.0
        },
        "offset": {
            "description": "If 0 is passed in for this value, then playback will start from the beginning of the buffer. Offset sould not be  negative. If offset is greater than loopEnd, playbackRate is positive or zero, and loop is true, playback will begin at loopEnd. If offset is greater than loopStart, playbackSpeed is negative, and loop is true, playback will begin at loopStart. offset is silently clamped to [0, duration], when startTime is reached, where duration is the value of the duration attribute of the AudioData or Oscillator set to the buffer attribute of this node.",
            "type": "number",
            "minimum": 0.0,
            "default": 0.0
        },
        "when": {
            "description": "The time (in milliseconds) the sound should start playing.",
            "type": "number",
            "minimum": 0.0,
            "default": 0.0
        },
        "channelInterpretation": {
            "type": "string",
            "description": "Channel ordering for speaker channel interpretation are captured here. When the number of channels do not match any of the basic speaker layouts, use discrete to  maps channels to outputs. ",
            "enum": [
              "speakers",
              "discrete"
            ]
          },
        "extensions": {},
        "extras": {}
    },
    "required": [
        "data"
    ]
}
